（signed）char      -128——127           unsigned char     0——255        （signed) short     -32768——32767         unsigned short        0——65535
  (signed ) int     -32768——32767        unsigned short     0——65535      (signed) long      -2147483648——2147483647         unsigend long    0——4294967295
   float      -3.4*10-38——3.4*1038        double       -1.7*10-308——1.7*10308                                                             
                                                                                        参数详解

                      %a             浮点数、十六进制数字和p-记数法（Ｃ９９）                                      %A　　浮点数、十六进制数字和p-记法（Ｃ９９）
                      %c　　　　 一个字符(char)                                                                %C           一个ISO宽字符
                      %d　　　　有符号十进制整数(int)（%e　　　　浮点数、e-记数法                                    %E　　　　浮点数、Ｅ-记数法
                      %f　　　　 单精度浮点数(默认float)、（%.nf  这里n表示精确到小数位后n位.十进制计数）               %g　　　　根据数值不同自动选择％f或％e．
                      %G　　　　根据数值不同自动选择％f或％e.                                                      %i              有符号十进制数（与％d相同）
                      %o　　　　无符号八进制整数                                                                 %p　　　   指针
                      %s　　　　 对应字符串char*                                                                                                                                                        %S         对应宽字符串WCAHR*（
                                                     %u　　　   无符号十进制整数(unsigned int)

                      %x　　　　使用十六进制数字０f的无符号十六进制整数　                                                        %%　　　  打印一个百分号

①%：表示格式说明的起始符号，不可缺少。  ②-：有-表示左对齐输出，如省略表示右对齐输出。   ③0：有0表示指定空位填0,如省略表示指定空位不填。
④m.n：m指域宽，即对应的输出项在输出设备上所占的字符数。n指精度。用于说明输出的实型数的小数位数。为指定n时，隐含的精度为n=6位。
⑤l或h:l对整型指long型，对实型指double型。h用于将整型的格式字符修正为short型。
格式字符

 ①d格式：用来输出十进制整数。有以下几种用法：
%d：按整型数据的实际长度输出。
%md：m为指定的输出字段的宽度。如果数据的位数小于m，则左端补以空格，若大于m，则按实际位数输出。
③x格式：以无符号十六进制形式输出整数。对长整型可以用"%lx"格式输出。同样也可以指定字段宽度用"%mx"格式输出。
④u格式：以无符号十进制形式输出整数。对长整型可以用"%lu"格式输出。同样也可以指定字段宽度用“%mu”格式输出。
⑤c格式：输出一个字符。
⑥s格式：用来输出一个串。有几中用法
%s：例如:printf("%s", "CHINA")输出"CHINA"字符串（不包括双引号）
%ms：输出的字符串占m列，如果字符串本身长度大于m，则突破获m的限制,将字符串全部输出。若串长小于m，则左补空格。
%-ms：如果串长小于m，则在m列范围内，字符串向左靠，右补空格。
%m.ns：输出占m列，但只取字符串中左端n个字符。这n个字符输出在m列的右侧，左补空格。
%-m.ns：其中m、n含义同上，n个字符输出在m列范围的左侧，右补空格。如果n>m，则自动取n值，即保证n个字符正常输出。
⑦f格式：用来输出实数（包括单、双精度），以小数形式输出。有以下几种用法：
%f：不指定宽度，整数部分全部输出并输出6位小数。
%m.nf：输出共占m列，其中有n位小数，若数值宽度小于m左端补空格。 
%-m.nf：输出共占m列，其中有n位小数，若数值宽度小于m右端补空格。
⑧e格式：以指数形式输出实数。可用以下形式：
%e：数字部分（又称尾数）输出6位小数，指数部分占5位或4位。
%m.ne和%-m.ne：m、n和”-”字符含义与前相同。此处n指数据的数字部分的小数位数，m表示整个输出数据所占的宽度。
⑨g格式：自动选f格式或e格式中较短的一种输出，且不输出无意义的零。

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
关于printf函数的进一步说明：
如果想输出字符"%",则应该在“格式控制”字符串中用连续两个%表示，如:
printf("%f%%", 1.0/3);
输出0.333333%。

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－

对于单精度数，使用%f格式符输出时，仅前7位是有效数字，小数6位．
对于双精度数，使用%lf格式符输出时，前16位是有效数字，小数6位．

-----------------------------可变宽度参数
对于m.n的格式还可以用如下方法表示（例）
char ch[20];
printf("%*.*s\n",m,n,ch);
前边的*定义的是总的宽度，后边的定义的是输出的个数。分别对应外面的参数m和n 。我想这种方法的好处是可以在语句之外对参数m和n赋值，从而控制输出格式。

